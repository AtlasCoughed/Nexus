{"version":3,"sources":["admin.js"],"names":[],"mappings":"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","file":"admin-compiled.js","sourcesContent":["const db           = require('../config/db');\nconst password     = require('../config/passwordTools.js');\nconst jsonWebToken = require('jsonwebtoken');\n\n/* ------------------- TO DO LIST ------------------- */\nconst fetchAllTodos = (req, res) => {\n  console.log('Inside fetchAllTodos in model');\n  db.Todo.findAll()\n    .then((todos) => {\n      res.status(200).send(todos);\n    })\n    .catch((err) => {\n      res.status(500).send(err.message);\n    });\n};\n\nconst addTodo = (req, res, todo) => {\n  console.log('Inside addTodo in model:', todo);\n  db.Todo.create(todo)\n    .then((todo) => {\n      res.status(200).send(todo);\n    })\n    .catch((err) => {\n      res.status(500).send(err.message);\n    });\n};\n\nconst deleteTodo = (req, res, todoId) => {\n  console.log('Inside deleteTodo in model');\n  db.Todo.findById(todoId)\n    .then((todo) => {\n      res.status(200).send(todo);\n      todo.destroy();\n    })\n    .catch((err) => {\n      res.status(500).send('Failed to delete todo item:', todo);\n    });\n};\n\nexports.todos = {\n  fetchAll: fetchAllTodos,\n  add: addTodo,\n  delete: deleteTodo,\n}\n\n/*------------------- SIGN IN/ SIGN UP ------------------- */\nconst signIn = (req, res, loginUsername, loginEmail, loginPassword) => {\n  db.User.findOne({\n    where:{\n      username : loginUsername,\n      email    : loginEmail\n    },\n    attributes: ['id', 'firstName', 'lastName', 'email', 'username', 'password', 'profilePic', 'bio']\n  })\n    .then( foundUser => {\n      if (!foundUser) res.status(401).send('User not found.');\n      else {\n        // password.checkPassword(loginPassword, foundUser.password)\n        //   .then(successfulMatch => {\n            const token = jsonWebToken.sign(foundUser.dataValues, 'userDashboard');\n            res.status(200).json({\n              id: foundUser.id,\n              firstName: foundUser.firstName,\n              email: foundUser.email,\n              username: foundUser.username,\n              token: token,\n            // });\n          })\n          // .catch(error => {\n          //   console.log(\"Password hashing error: \", error);\n          //   res.status(500).send(error);\n          // })\n      }\n    })\n    .catch( err => {\n      console.log('Line 84 Error:', err);\n      res.status(500).send(\"Password do not match\", err);\n    });\n};\n\nconst signUp = (req, res, newUser) => {\n  db.User.create(newUser)\n    .then((data) => {\n      res.status(200).json(data);\n    })\n    .catch((err) => {\n      res.status(400).send(err);\n    });\n};\n\n\nexports.auth = {\n  signUp: signUp,\n  signIn: signIn,\n  googleSignIn: googleSignIn\n}\n"]}