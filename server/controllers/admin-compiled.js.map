{"version":3,"sources":["admin.js"],"names":[],"mappings":";;AAAA,IAAM,QAAQ,QAAQ,iBAAR,CAAd;;;AAGA,IAAM,gBAAgB,SAAhB,aAAgB,CAAC,GAAD,EAAM,GAAN,EAAc;AAClC,MAAM,SAAS,IAAI,MAAJ,CAAW,MAA1B;AACA,QAAM,KAAN,CAAY,QAAZ,CAAqB,GAArB,EAA0B,GAA1B,EAA+B,MAA/B;AACD,CAHD;;AAKA,IAAM,UAAU,SAAV,OAAU,CAAC,GAAD,EAAM,GAAN,EAAc;AAC5B,MAAM,OAAO,IAAI,IAAjB;AACA,QAAM,KAAN,CAAY,GAAZ,CAAgB,GAAhB,EAAqB,GAArB,EAA0B,IAA1B;AACD,CAHD;;AAKA,IAAM,aAAa,SAAb,UAAa,CAAC,GAAD,EAAM,GAAN,EAAc;AAC/B,MAAM,SAAS,IAAI,MAAJ,CAAW,MAA1B;AACA,QAAM,KAAN,CAAY,MAAZ,CAAmB,GAAnB,EAAwB,GAAxB,EAA6B,MAA7B;AACD,CAHD;;AAKA,QAAQ,KAAR,GAAgB;AACd,YAAU,aADI;AAEd,OAAK,OAFS;AAGd,UAAQ;AAHM,CAAhB;;;AAOA,IAAM,SAAS,SAAT,MAAS,CAAC,GAAD,EAAM,GAAN,EAAc;AAC3B,MAAM,eAAe,IAAI,IAAzB;;;;;;;;AAQA,kBAAgB,aAAa,QAA7B;AACA,eAAa,aAAa,KAA1B;AACA,kBAAgB,aAAa,QAA7B;;AAEA,QAAM,IAAN,CAAW,MAAX,CAAkB,GAAlB,EAAuB,GAAvB,EAA4B,aAA5B,EAA2C,UAA3C,EAAuD,aAAvD;AACD,CAdD;;AAgBA,IAAM,SAAS,SAAT,MAAS,CAAC,GAAD,EAAM,GAAN,EAAc;AACzB,MAAM,UAAU;AACd,cAAU,IAAI,IAAJ,CAAS,QADL;AAEd,WAAO,IAAI,IAAJ,CAAS,KAFF;AAGd,cAAU,IAAI,IAAJ,CAAS,QAHL;AAId,eAAW,IAAI,IAAJ,CAAS,SAJN;AAKd,cAAU,IAAI,IAAJ,CAAS,QALL;AAMd,YAAQ,IAAI,IAAJ,CAAS,MANH;AAOd,gBAAY,IAAI,IAAJ,CAAS,UAPP;AAQd,SAAK,IAAI,IAAJ,CAAS;AARA,GAAhB;AAUF,QAAM,IAAN,CAAW,MAAX,CAAkB,GAAlB,EAAuB,GAAvB,EAA4B,OAA5B;AACD,CAZD;;AAgBA,QAAQ,IAAR,GAAe;AACb,UAAQ,MADK;AAEb,UAAQ,MAFK;AAGb,gBAAc;AAHD,CAAf","file":"admin-compiled.js","sourcesContent":["const model = require('../models/admin');\n\n/* ------------------- TO DO LIST ------------------- */\nconst fetchAllTodos = (req, res) => {\n  const userId = req.params.userId;\n  model.todos.fetchAll(req, res, userId);\n}\n\nconst addTodo = (req, res) => {\n  const todo = req.body;\n  model.todos.add(req, res, todo);\n};\n\nconst deleteTodo = (req, res) => {\n  const todoId = req.params.todoId;\n  model.todos.delete(req, res, todoId);\n}\n\nexports.todos = {\n  fetchAll: fetchAllTodos,\n  add: addTodo,\n  delete: deleteTodo,\n}\n\n/* ------------------- SIGN IN / SIGN UP ------------------- */\nconst signIn = (req, res) => {\n  const loginAttempt = req.body;\n\n  // Refactor later, to streamline form for the user to either enter username OR email\n  // if((!req.body.username && !req.body.email) || !req.body.password){\n  //   res.status(500).send(\"Invalid or missing inputs\");\n  // }\n  // uniqueIdentifier = (req.body.username) ? 'username' : 'email';\n\n  loginUsername = loginAttempt.username;\n  loginEmail = loginAttempt.email;\n  loginPassword = loginAttempt.password;\n\n  model.auth.signIn(req, res, loginUsername, loginEmail, loginPassword);\n};\n\nconst signUp = (req, res) => {\n    const newUser = {\n      username: req.body.username,\n      email: req.body.email,\n      password: req.body.password,\n      firstName: req.body.firstName,\n      lastName: req.body.lastName,\n      cohort: req.body.cohort,\n      profilePic: req.body.profilePic,\n      bio: req.body.bio,\n    };\n  model.auth.signUp(req, res, newUser);\n};\n\n\n\nexports.auth = {\n  signIn: signIn,\n  signUp: signUp,\n  googleSignIn: googleSignIn\n}\n"]}